-----------string slicing---------------

string="happy"
print(string[0])
print(string[0:2])
print(string[0:3])
print(string[0:5])
print(string[0:])

print(string[-1])
print(string[3:])
print(string[2:])
print(string[1:])
print(string[0:])

print(string[2:10:3])
print(string[::-1])

-----------list------------------

cities = ["chennai","salem","dharmapuri","namakal"]
val=[1,34,5,8,66,74,2,10]
list1=["chennai",4,saleem]

****accessing the list with indexing****

print(cities[0])
print(val[2])
print(citites[1])

to modify
cities[2]="salem"  --->its will change the value in the list

appen
cities.append("dharmapuri") -->it will add this in list in last 

remove using del
del cities[3]

remove using pop()
deleted = cities.pop()
print(deleted)

remove by value
cities.remove("salem")   --> if we don't know the index and we need to delete the index means we can use this

temoporay sort
print(sorted(cities))

permanent sort
cities.sort()
print(cities)

to reverse
cities.reverse()

to find length
print(len(cities))

#---------------2D list--------------------

cities = ["chennai","salem","dharmapuri","namakal"]
TN = cities           # ------------------------------------> this copy will not work 
ap = ['tirupathi','nellore','guntur']
karnataka = ['bangalore','mysore','udupi']

india = [TN,ap,karnataka]

import copy
indian_state = copy.deepcopy(india)     #if you use insted of = to copy it mite change the list value
print(indian_state)
ap.pop()
print(indian_state)

#-------------tuples-----------
tup = (3,4,65,2,1,3,2)
print(tup)   # we can't change the valued in tuples but c=we can change the entire tuples

print(tup[2])

print(tup.index(4))

print(tup.count(2))

for i in tup:
   print(i) 

if 2 in tuo:                   # if 2 is there in tuples means it will return the yes
   print("yes")

if tup:
  print("tuple is not empty")    # if tuple is not empty, it's have any one value means it will print the message


#----------------------------dictionaries ------------------------------

user = {"name":"dk", "age":24, "salary":2000}   # dictionaries will noont maintain teh order
print(user)        # we need to give unique keys


#adding the new key value pair 
user["city"]="dpi"
print(user)


#modify
del user["age"]
print(user)

#LOOPING
for key,val in user.items():
    print("key: "+ key)
    print("val: "+ str(val))
    
    
for key in user.keys():
        print(key)
    
# to get iy in order
for key in sorted(user.keys()):
    print(user[key])
       
    
job = {"dk":"tcs","ak":"cts","sk":"atc"}
for i in job.values():
    print(i)



# list of dictionaries 

users = []
user = {'name':'dk', 'age':23,'city':'dpi'}
users.append(user)
user ={'name':'dk', 'age':24,'city':'dpi'}
users.append(user)

print(users)
print(user[1]['name'])

user['fav_food'] = ['poor','pizza','pasta']
print(user)
print(user[fav_food][0])


#------------set---------------

unique , not ordered

names = {"dk","ak","sk","pk"}
print(names)

name_list = list(names)
print(name_list)


To remove duplicate from list you can use this 
set(name_list)