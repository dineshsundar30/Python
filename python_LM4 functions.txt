def greet(name):                     #name - parameter 
   print("hlo" + name)
   print("welcome, how are you")

greet("dk")  #passing arguments dk is the argument

name="Ak"
greet(name)

--------------------------------
def greet(name,age):
  print(name+ "welcome"+" "+ age)

greet("dk",12)  # Here order is importent and it's called as positional argument's

-------------------------------------
using key word orgument

def greet(name,age):
  print(name+ "  welcome" + " " +str(age))

greet(age=15, name="dk")  #here we can change the order and it's called as keyword arguments


------------------------------------------------------------------

return

for sum n natural numbers

def sum(num):
      result = num*(num+1)/2
   return result

or 

def sum(num):

   return num*(num+1)/2


finalresult = sum(2)
print(finalresult) 


-----------------------------------------
args function 

you can pass n number of arguments using this agrs

def total(*args):   # here you need use * and can assign any name like *dinesh
   sum = 0                        and it's pack the input return as tupuls and we are useing this for stright forword values
   for i in args:
       sum = sum+i
   return sum


print(total(5,3,2,52,5,6,1))

-----------------------------------------------------------------------------

Kwargs


 # here you need use ** and can assign any name like *dinesh, and it's pack the input return as dictionary
and this we are using for variable_name and value  

def print_drr(**kwargs):
          for key,val in kwargs.items():
          print(val)



print_print_drr("doorno"="6/90","city"="dpi",name="dk")

def greet(**i):
    for key,val in i.items():
        print(key+": "+ val, end=" ")

greet(name=input("name: "),age=input("age: "),city=input("city: "),state=input("State: "))



------------------------------------------------------------------------------------------

default arguments

def greet(fname, lname="")   #   here ""  if you keet empty it's wont print anything and argument not required for this or you can name default values "noname"
  print(fname+lname)

greet(dk)

-----------------------------------------------------------------------------------------------------


def printList(list):
    for i in list:
       print(i.title())

name=["dk","ak","sk","pk"]
printList(name)



----------------------------------------

To changing values in list


def printList(list):
    for i in range(0,len(list)):
       list[i] = list[i].title()


name=["dk","ak","sk","pk"]
printList(name)
print(name)

OR if you don't want to change the original list

def printList(list):
    for i in range(0,len(list)):
       list[i] = list[i].title()
       print(list[i])


name=["dk","ak","sk","pk"]
printList(name[:])                    #use  [:] 
print(name)


-------------------------------------------------------------------
in function we can return only one thing if you want you return you can pack it in list or dictionary 


------------------------------------------------------------------------

Note: if a function called inside a function means recursion

def fact(num):
   if num==0:
        return 1
   return num*fact(num-1)


print(fact(4))

------------------------------------------------------------------

user.py

class User:
   users = 0  #class variable
   def __init__(self,username,pwd):
       self.username = username #instamce variable
       self.pwd = pwd
       User.users += 1   # If we need to access the class variable we need to use class name


   def register(self):
      print('registering..')

   def login(self):
      print('logging in')

--------
if we need to call that class

from user import User:

user1 = User('kavitha','abc1234')
user2 = User('kumar','123abc')

if we need to print the class method 
user1.login()
user2.register()

if we need to print the instance variable
print(user1.username)  #you can call this variable with object

if you want to access the class variable you can use like below class name + variable name
print(User.users)


