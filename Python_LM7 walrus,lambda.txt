walrus operator  #:=

name="dk"
print(name)

print(name:="dk")

------------------------------

mylist=list()

while (inp :=input())!= 'z':
     mylist.append(int(inp))

print(mylist)


--------------------------

#Higher order function

def happy():
  print("jumping")
def sad():
   print("crying")


joy = happy

joy() o/p --> jumping


----------------------------------------------------------

lambda  # you can use this for single expression 

def add_ten(num):
   return num+10
print(add_ten)


tnum = lambda x:x+10
print(tnum(8))
----------------------
product = lambda a,b,c:a*b*c
print(product(2,4,3))
----------------------------
tall_enough= lambda h:h>175
print(tall_enough(180))
-----------------------------------
strong_enough = lambda w: "yes" if w>60 else "no"
print(strong_enough(40))

-----------------------------------------------------

items= [(3456, "shoe", 790"),(2320,"phone", 25300), (2587,"note",80)]     # List of tuples

items.sort ( )                        #here it will sort with the first index 
print (items)
items. sort(key=lambda item:item[l])      #here it will sort with your preference index 
print (items)


-----------------------------------------------------------------------------
items= [(3456, "shoe", "790"),(2320,"phone", 25300), (2587,"note",80)]

items.sort(key= lambda item:item[1])
print(items)
--------------------------------------------------------------------------
tups sorted
items= ((3456, "shoe", "790"),(2320,"phone", 25300), (2587,"note",80))

print(sorted(items, key= lambda item:item[1]))


